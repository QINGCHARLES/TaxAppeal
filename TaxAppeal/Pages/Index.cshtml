@page
@model IndexModel
@{
	ViewData["Title"] = "Tax Appeal";
}
<div class="text-center">
	<h1 class="fdisplay-4">Take the First Step Towards<br />Your Property Tax Assessment Appeal</h1>
	<br />
	<form method="post">
		<label asp-for="StreetAddress">Enter the first line of your street address:</label><br /><br /><br />
		<input asp-for="StreetAddress" autocomplete="off" placeholder="e.g. 4128 N Tripp Ave" />
    
		<button type="submit">Start >></button>

        <datalist></datalist>
        <ul id="Suggestions"></ul>
	</form>


    <script type="text/javascript">
        //const searchinput = document.getElementById('StreetAddress');

        //const url = '/api:find-address';

        //const results = [];

        //function fff(){
        //    console.log(this.value);
        //fetch(url)
        //.then(blob => blob.json())
        //.then(data => console.log(results.push(...data)));
        //}

        //searchinput.addEventListener('change', fff);


        document.getElementById('StreetAddress').addEventListener('input', function (e) {
            const suggestions = document.getElementById('Suggestions');
            const input = e.target.value;
            if (input.length > 2) {
                fetch('/api:find-address?query=' + input)
                    .then(response => response.json())
                    .then(data => {
                        
                        suggestions.innerHTML = '';
                        data.forEach(item => {
                            const li = document.createElement('li');
                            li.textContent = item;
                            suggestions.appendChild(li);
                        });
                    });
            }
            else
            {
                suggestions.innerHTML = '';
            }
        });

    </script>

   @* <script>

        window.addEventListener('DOMContentLoaded', function () {
            // 'local' is the 'id' of input element
            new Autocomplete('StreetAddress', {
                onSearch: ({ currentValue }) => {
                    // local data
                    const data = [
                        { name: 'Walter White' },
                        { name: 'Jesse Pinkman' },
                        { name: 'Skyler White' },
                        { name: 'Walter White Jr.' },
                    ];
                    return data
                        .sort((a, b) => a.name.localeCompare(b.name))
                        .filter((element) => {
                            return element.name.match(new RegExp(currentValue, 'i'));
                        });
                },

                onResults: ({ matches }) => {
                    return matches
                        .map((el) => {
                            return `
                    <li>${el.name}</li>`;
                        })
                        .join('');
                },
            });
        });
    </script>*@
</div>
